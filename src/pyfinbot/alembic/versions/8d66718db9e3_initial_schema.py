"""Initial schema

Revision ID: 8d66718db9e3
Revises: 
Create Date: 2025-08-31 17:54:55.470226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '8d66718db9e3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('market', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('write_datetime', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', 'market', name='unique_symbol_market')
    )
    op.create_index(op.f('ix_stock_market'), 'stock', ['market'], unique=False)
    op.create_index(op.f('ix_stock_name'), 'stock', ['name'], unique=False)
    op.create_index(op.f('ix_stock_symbol'), 'stock', ['symbol'], unique=False)
    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('write_datetime', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('type', sa.Enum('BUY', 'SELL', name='typeenum'), nullable=False),
    sa.Column('units', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('price', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('fees', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('cost', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fy', sa.Integer(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('write_datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stock.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_user_id'), 'transaction', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_user_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_stock_symbol'), table_name='stock')
    op.drop_index(op.f('ix_stock_name'), table_name='stock')
    op.drop_index(op.f('ix_stock_market'), table_name='stock')
    op.drop_table('stock')
    # ### end Alembic commands ###
