"""v0.2 users

Revision ID: 043ec76a060a
Revises: 8101046ced8e
Create Date: 2025-05-18 14:43:31.955231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '043ec76a060a'
down_revision: Union[str, None] = '8101046ced8e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('user', sa.Column('active', sa.Boolean(), nullable=False))
    op.drop_index('ix_user_name', table_name='user')
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.create_index(op.f('ix_user_external_id'), 'user', ['external_id'], unique=False)
    op.drop_column('user', 'is_active')
    op.drop_column('user', 'email')
    op.drop_column('user', 'is_super')
    op.drop_column('user', 'name')
    op.drop_column('user', 'password_hash')
    op.drop_column('user', 'is_staff')
    op.drop_column('user', 'last_login')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('is_super', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_user_external_id'), table_name='user')
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.create_index('ix_user_name', 'user', ['name'], unique=False)
    op.drop_column('user', 'active')
    op.drop_column('user', 'external_id')
    # ### end Alembic commands ###
